generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model User {
  id        String   @id @unique @default(uuid())
  firstName String
  lastName  String
  password  String
  image     Bytes?
  email     String   @unique
  birthday  String
  groupRole Role     @default(USER)
  results   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Quiz            Quiz[]
  Case            Case[]
  Patient         Patient[]
  CaseUserHistory CaseUserHistory[]
}

model Patient {
  id             String   @id @unique @default(uuid())
  firstName      String
  lastName       String
  userId         String
  image          Bytes?
  birthday       String
  profession     String?
  height         String
  weight         String
  chiefComplaint String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  Case Case[]

  user User @relation(fields: [userId], references: [id])
}

model Quiz {
  id        String   @id @unique @default(uuid())
  userId    String
  caseId    String   @unique
  questions Json
  edges     Json?
  nodes     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User  @relation(fields: [userId], references: [id])
  case Case? @relation(fields: [caseId], references: [id])
}

model Case {
  id             String     @id @unique @default(uuid())
  userId         String
  patientId      String
  title          String
  description    String
  chiefComplaint String
  scenery        String
  difficulty     Difficulty @default(EASY)
  quiz           Quiz?

  user            User              @relation(fields: [userId], references: [id])
  patient         Patient           @relation(fields: [patientId], references: [id])
  CaseUserHistory CaseUserHistory[]
}

model CaseUserHistory {
  caseId    String
  userId    String
  history   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  case Case @relation(fields: [caseId], references: [id])

  @@id([userId, caseId])
}
